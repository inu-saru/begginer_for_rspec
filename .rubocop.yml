# To use the MeowCop gem.
inherit_gem:
  meowcop:
    - config/rubocop.yml

# Modify the version if you don't use MRI 2.6.
AllCops:
  TargetRubyVersion: 2.6
  # If you use RuboCop with Ruby on Rails, specify TargetRailsVersion(default: 5.0).
  TargetRailsVersion: 5.0
  Exclude:
    - vendor/**/*
    - bin/*
    - 'config/environments/#'
    - 'db/migrate/*'
    - 'db/schema.rb'
    - 'db/seeds.rb'
    - 'deploy/*'
    - 'spec/rails_helper.rb'
    - 'spec/spec_helper.rb'

# Rails:
#   # If you use RuboCop with Ruby on Rails, turn on this option.
#   Enabled: false

# Now you can run rubocop and it will automatically load the RuboCop Rails cops together with the standard cops.
# https://github.com/rubocop-hq/rubocop-rails
require:
  - rubocop-rails
  - rubocop-performance
  - rubocop-rspec

# You can customize rubocop settings.
# For example.
# Style/FrozenStringLiteralComment:
#   Enabled: true
#   EnforcedStyle: always

# ============================================================
# RSpec
# ============================================================
# backgroundとかであるクラスの全インスタンスをstubしてるなど意図してやると思うので
RSpec/AnyInstance:
  Enabled: false

# Contextの条件の説明を日本語でも書きたいので
RSpec/ContextWording:
 Enabled: false

# 以下のようなもので引っかかってしまって困るので
# describe GuestTicket do
#   describe '#save' do
#     let!(:guest_ticket) {
#       GuestTicket.new schedule, guest_ticket_params
#     }
RSpec/DescribedClass:
  Enabled: false

# 厳密にテストしたい場合に複数条件を入れるのはよいかと
RSpec/MultipleExpectations:
  Enabled: false

# feature specで長くなるので
RSpec/ExampleLength:
  Enabled: false

# 自動生成されて中身が空のままコミットすることはある
RSpec/EmptyExampleGroup:
  Enabled: false